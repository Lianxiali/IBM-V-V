/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    p
    {
        solver          PCG;
        preconditioner DIC;
        tolerance       1e-6;
        relTol          0;
        smoother        GaussSeidel;
        
//         maxIter 1;
        minIter 0;
    }
    
/*   p                                  // linear equation system solver for pd
    {
        solver          GAMG;           // very efficient multigrid solver
        tolerance       1e-5;          // solver finishes if either absolute
        relTol          0.001;          // tolerance is reached or the relative
                                        tolerance here
        minIter         3;              // a minimum number of iterations
        maxIter         100;            // limitation of iterions number
        smoother        DIC;            // setting for GAMG
        nPreSweeps      1;              // 1 for pd, set to 0 for all other!
        nPostSweeps     2;              // 2 is fine
        nFinestSweeps   2;              // 2 is fine
        scaleCorrection true;           // true is fine
        directSolveCoarsestLevel false; // false is fine
        cacheAgglomeration on;          // on is fine; set to off, if dynamic
                                        mesh refinement is used!
        nCellsInCoarsestLevel 500;      // 500 is fine,
                                        otherwise sqrt(number of cells)
        agglomerator    faceAreaPair;   // faceAreaPair is fine
        mergeLevels     1;              // 1 is fine
    }   */ 

    "pcorr.*"
    {
        $p
        tolerance       0.02;
        relTol          0;
    }    

    pFinal
    {
        $p;
        tolerance       1e-8;
        relTol          0;
    }

    "(U|k|epsilon|omega|R|nuTilda)"
    {
        solver          smoothSolver;
        smoother        GaussSeidel;
        tolerance       1e-6;
        relTol          0;
    }
    
    UFinal
    {
        $U;
        tolerance       1e-8;
        relTol          0;
    }
    
    "cellDisplacement.*"
    {
        solver          PCG;
        preconditioner  DIC;
        tolerance       1e-08;
        relTol          0;
    }    
}

PIMPLE
{
    nOuterCorrectors 10;
    nCorrectors     2;
    nNonOrthogonalCorrectors 1;
    pRefCell        0;
    pRefValue       0;
    
    residualControl
    {
        U
        {
                tolerance  1e-7;
                relTol      0;
        }

     }    
}

// ************************************************************************* //
